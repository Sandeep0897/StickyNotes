{"version":3,"sources":["constants/user_constant.js","actions/user_action.js","Components/Header.js","Components/Footer.js","Screen/landingpage/landingpage.js","Components/MainScreen.js","constants/notes_constants.js","Components/spinner.js","Components/Error.js","Screen/Notes/Notes.js","actions/notes_actions.js","Screen/login/login.js","Screen/register/register.js","Screen/postNote/postNote.js","Screen/updateNote/updateNote.js","Screen/profile/profile.js","App.js","store/store.js","reducers/user_reducer.js","reducers/notes_reducer.js","index.js"],"names":["USER_LOGIN_REQ","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_LOG_OUT","USER_REGISTER_REQ","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","USER_UPDATE_REQ","USER_UPDATE_SUCCESS","USER_UPDATE_FAILURE","userLoginAction","email","password","dispatch","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","Header","string","navigate","useNavigate","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","expand","className","Container","Brand","to","style","color","textDecoration","Toggle","Collapse","id","Nav","Link","NavDropdown","title","name","charAt","toUpperCase","slice","Item","onClick","removeItem","Footer","Row","Col","Homepage","Button","size","variant","MainScreen","children","GET_NOTES_REQ","GET_NOTES_SUCCESS","GET_NOTES_FAILURE","CREATE_NOTE_REQ","CREATE_NOTE_SUCCESS","CREATE_NOTE_FAILURE","UPDATE_NOTE_REQ","UPDATE_NOTE_SUCCESS","UPDATE_NOTE_FAILURE","DELETE_NOTES_REQ","DELETE_NOTES_SUCCESS","DELETE_NOTES_FAILURE","Loading","display","justifyContent","alignItems","width","height","Spinner","animation","ErrorMessage","Alert","fontSize","Notes","getNotes","loading","notes","error","successPost","postNotes","success","successUpdate","updateNotes","deleteNotes","successDelete","loadingDelete","errorDelete","useEffect","getState","Authorization","JWT_token","get","deleteHandler","window","confirm","URL","delete","deleteNoteAction","Error","map","note","xs","md","lg","Card","border","marginTop","Body","Title","Text","content","href","_id","Login","useState","setEmail","setPassword","HandleClick","e","preventDefault","Form","onSubmit","Group","controlId","Label","Control","placeholder","value","onChange","target","Register","setName","confirmPassword","setconfirmPassword","Telephone","setPhone","message","setMessage","userRegister","event","length","userRegisterAction","Post","setTitle","setContent","postNoteAction","alert","as","rows","Edit","useParams","fetchNotebyId","put","updateNoteAction","Profile","userProfile","user","App","path","element","exact","reducers","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","legacy_createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65ea5f98.chunk.js","sourcesContent":["//login\r\nexport const USER_LOGIN_REQ = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS=\"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAILURE=\"USER_LOGIN_FAILURE\";\r\nexport const USER_LOG_OUT = \"USER_LOG_OUT\";\r\n\r\n//register\r\nexport const USER_REGISTER_REQ = \"USER_REGISTER_REQ\";\r\nexport const USER_REGISTER_SUCCESS=\"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAILURE=\"USER_REGISTER_FAILURE\";\r\n\r\n//profile update\r\nexport const USER_UPDATE_REQ = \"USER_UPDATE_REQ\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAILURE = \"USER_UPDATE_FAILURE\";","import {\r\n  USER_LOGIN_REQ,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAILURE,\r\n  USER_LOG_OUT,\r\n  USER_REGISTER_REQ,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAILURE,\r\n  USER_UPDATE_REQ,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAILURE,\r\n} from \"../constants/user_constant\";\r\nimport axios from \"axios\";\r\n\r\n//creating login action\r\nexport const userLoginAction = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQ });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"http://localhost:5000/users/login\",\r\n      {\r\n        email,\r\n        password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAILURE,\r\n      payload: \"Invalid Email or password\",\r\n    });\r\n  }\r\n};\r\n\r\n//creating logout action\r\nexport const userLogoutAction = () => (dispatch) => {\r\n  dispatch({ type: USER_LOG_OUT });\r\n  localStorage.removeItem(\"userInfo\");\r\n};\r\n\r\n//creating register action\r\nexport const userRegisterAction =\r\n  (name, email, password, Telephone) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_REGISTER_REQ });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"http://localhost:5000/users/\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          Telephone,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAILURE,\r\n        payload: \"Please complete all the fields or check for invalid fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n//profile update action\r\nexport const userProfileUpdateAction = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQ });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.JWT_token}`,\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const URL = \"http://localhost:5000/users/profile\";\r\n    const { data } = await axios.post(\r\n      URL,user,config\r\n    );\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_UPDATE_FAILURE, payload: \"Profile update failed\" });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport{useDispatch,useSelector} from \"react-redux\";\r\nimport {userLogoutAction} from \"../actions/user_action\";\r\nimport { Link,useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Header() {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state)=>state.userLogin);\r\n  const{userInfo} =userLogin;\r\n\r\n  function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n  \r\n\r\n  const handleLogout = ()=>{\r\n     dispatch(userLogoutAction());\r\n     navigate('/');\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\" className=\"nav\">\r\n        <Container>\r\n          \r\n            <Navbar.Brand>\r\n            <Link to=\"/\" style={{ color: 'inherit', textDecoration: 'none' }}>Sticky Notes</Link>\r\n            </Navbar.Brand>\r\n         \r\n\r\n   \r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n           {userInfo && <Nav className=\"ms-auto\">\r\n              <Nav.Link>\r\n                <Link to=\"/notes\" style={{ color: 'inherit', textDecoration: 'none' }}>Notes</Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <Link to=\"/post\" style={{ color: 'inherit', textDecoration: 'none' }}>Create Note</Link>\r\n              </Nav.Link>\r\n          \r\n              <NavDropdown title={capitalizeFirstLetter(userInfo.name)} id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item>\r\n                <Link to=\"/profile\" style={{ color: 'inherit', textDecoration: 'none' }}>My Profile</Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item onClick={handleLogout}\r\n                >Log out</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>}\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport \"../App.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">made with ❤ by Sandy</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { Button, Container, Row } from \"react-bootstrap\";\r\nimport \"./Homepage.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <div className=\"homepage\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"intro-text\">\r\n            <h1 className=\"title\">Sticky Notes Web App</h1>\r\n            <p className=\"subtitle\">Add your day to day notes </p>\r\n\r\n            <div className=\"buttonContainer\">\r\n              <Link to=\"/login\">\r\n              <Button size=\"lg\" className=\"landingbutton\" variant=\"info\">\r\n                LOGIN\r\n              </Button>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n              <Button\r\n                variant=\"outline-dark\"\r\n                size=\"lg\"\r\n                className=\"landingbutton\"\r\n              >\r\n                SIGNUP\r\n              </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport \"./mainScreen.css\"\r\n\r\nfunction MainScreen({ title,children}) {\r\n  return (\r\n    <div className=\"mainscreen\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"page\">\r\n            {title && <>\r\n              <h1 className=\"heading\">{title}</h1>\r\n              <hr />\r\n            </>}\r\n            {children}\r\n            \r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n","//notes getList\r\nexport const GET_NOTES_REQ = \"GET_NOTES_REQ\";\r\nexport const GET_NOTES_SUCCESS = \"GET_NOTES_SUCCESS\";\r\nexport const GET_NOTES_FAILURE = \"GET_NOTES_FAILURE\";\r\n\r\n//post notes\r\nexport const CREATE_NOTE_REQ=\"CREATE_NOTE_REQ\";\r\nexport const CREATE_NOTE_SUCCESS=\"CREATE_NOTE_SUCCESS\";\r\nexport const CREATE_NOTE_FAILURE=\"CREATE_NOTE_FAILURE\";\r\n\r\n//update notes\r\nexport const UPDATE_NOTE_REQ=\"UPDATE_NOTE_REQ\";\r\nexport const UPDATE_NOTE_SUCCESS=\"UPDATE_NOTE_SUCCESS\";\r\nexport const UPDATE_NOTE_FAILURE=\"UPDATE_NOTE_FAILURE\";\r\n\r\n//Delete notes\r\nexport const DELETE_NOTES_REQ=\"DELETE_NOTES_REQ\";\r\nexport const DELETE_NOTES_SUCCESS=\"DELETE_NOTES_SUCCESS\";\r\nexport const DELETE_NOTES_FAILURE=\"DELETE_NOTES_FAILURE\";\r\n","\r\nimport React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loading({ size = 100 }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <Spinner\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n        }}\r\n        animation=\"border\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst ErrorMessage = ({ variant = \"info\" , children}) => {\r\n\r\n  \r\n  return (\r\n    <Alert variant={variant} style={{ fontSize: 20 }}>\r\n      <strong>{children}</strong>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;","import React,{useEffect} from \"react\";\r\nimport MainScreen from \"../../Components/MainScreen\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Card, Row, Col,Container} from \"react-bootstrap\";\r\nimport{useSelector,useDispatch} from \"react-redux\";\r\nimport {getNotesAction} from \"../../actions/notes_actions\";\r\nimport {deleteNoteAction} from \"../../actions/notes_actions\";\r\nimport Loading from \"../../Components/spinner\";\r\nimport Error from \"../../Components/Error\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\n\r\n\r\nfunction Notes() {\r\n\r\nconst dispatch=useDispatch();\r\nconst getNotes=useSelector((state)=>state.getNotes);\r\nconst{loading,notes,error}=getNotes;\r\nconst userLogin = useSelector((state)=>state.userLogin)\r\nconst{userInfo}=userLogin;\r\nconst navigate=useNavigate();\r\n\r\nconst postNotes = useSelector((state) => state.postNotes);\r\nconst{success:successPost}=postNotes;\r\n\r\nconst updateNotes = useSelector((state) => state.updateNotes);\r\nconst { success:successUpdate } = updateNotes;\r\n\r\nconst deleteNotes = useSelector((state)=>state.deleteNotes);\r\nconst{success:successDelete,loading:loadingDelete,error:errorDelete}=deleteNotes;\r\n  \r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n\r\n  useEffect(()=>{\r\n    dispatch(getNotesAction());\r\n    if(!userInfo){\r\n      navigate('/');\r\n    }\r\n  },[dispatch,navigate,userInfo,successPost,successUpdate,successDelete])\r\n\r\n\r\n  const deleteHandler=(id)=>{\r\n    if (window.confirm(\"Do you want to delete this note ?\")) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n    navigate('/notes');\r\n  }\r\n\r\n\r\n  return (\r\n    <MainScreen title={`Hello.. ${capitalizeFirstLetter(userInfo?.name )}`}>\r\n      {errorDelete && <Error variant=\"danger\">{errorDelete}</Error>}\r\n     \r\n      {error && <Error variant=\"danger\">{error}</Error>}\r\n      {loading || loadingDelete ? <Loading/> :\r\n      <Container>\r\n      <Row>\r\n      {notes && notes.map((note)=>{\r\n        return  <>\r\n        <Col key={note._id} xs={12} md={4} lg={3} >\r\n            <Card bg=\"Light\" border=\"warning\" style={{ marginTop: '25px' }}>\r\n            <Card.Body>\r\n        <Card.Title>{note.title}</Card.Title>\r\n        <Card.Text>\r\n          {note.content}\r\n        </Card.Text>\r\n        <Button variant=\"info\" href={`/notes/${note._id}`}><EditIcon/></Button>\r\n        <Button  variant=\"danger\"\r\n                      className=\"mx-2\"\r\n                      onClick={() => deleteHandler(note._id)}><DeleteIcon/></Button>\r\n      </Card.Body>\r\n              </Card>\r\n            </Col>\r\n      </>}\r\n        )}</Row>\r\n        </Container>}\r\n       \r\n    </MainScreen>\r\n\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","import {\r\n  GET_NOTES_REQ,\r\n  GET_NOTES_SUCCESS,\r\n  GET_NOTES_FAILURE,\r\n  CREATE_NOTE_REQ,\r\n  CREATE_NOTE_SUCCESS,\r\n  CREATE_NOTE_FAILURE,\r\n  UPDATE_NOTE_REQ,\r\n  UPDATE_NOTE_SUCCESS,\r\n  UPDATE_NOTE_FAILURE,\r\n  DELETE_NOTES_REQ,\r\n  DELETE_NOTES_SUCCESS,\r\n  DELETE_NOTES_FAILURE\r\n} from \"../constants/notes_constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getNotesAction = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_NOTES_REQ });\r\n    //this is coming from initial state of the store\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    //passing this config so that we get notes belonging to this user only since\r\n    //axios fetch data based on jwt_token of particular user\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.JWT_token}`,\r\n      },\r\n    };\r\n\r\n    //Axios api request\r\n    const URL = \"http://localhost:5000/notes\";\r\n    const { data } = await axios.get(URL, config);\r\n\r\n    //dispatching from axios get req\r\n    dispatch({ type: GET_NOTES_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_NOTES_FAILURE,\r\n      payload: \"Please Login or Register before proceeding with this request\",\r\n    });\r\n  }\r\n};\r\n\r\n//posting the notes\r\nexport const postNoteAction =\r\n  (title, content) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: CREATE_NOTE_REQ });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.JWT_token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      //api req\r\n      const URL = \"http://localhost:5000/notes\";\r\n      const { data } = await axios.post(\r\n        URL,\r\n        {\r\n          title,\r\n          content,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: CREATE_NOTE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CREATE_NOTE_FAILURE,\r\n        payload: \"The requested operation could not proceed\",\r\n      });\r\n    }\r\n  };\r\n\r\n//update the notes\r\nexport const updateNoteAction =\r\n  (id, title, content) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: UPDATE_NOTE_REQ });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.JWT_token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const URL = `http://localhost:5000/notes/${id}`;\r\n      const { data } = await axios.put(\r\n        URL,\r\n        { title: title, content: content },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: UPDATE_NOTE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({type:UPDATE_NOTE_FAILURE,payload:\"The requested operation failed\"})\r\n    }\r\n  };\r\n\r\n\r\n  // delete operation action\r\n  export const deleteNoteAction =(id)=>async (dispatch,getState)=>{\r\n    try{\r\n        dispatch({type:DELETE_NOTES_REQ});\r\n\r\n        const {userLogin :{userInfo}} = getState();\r\n\r\n        const config ={\r\n          headers:{\r\n            Authorization:`Bearer ${userInfo.JWT_token}`,\r\n            \"content-type\":\"application/json\"\r\n          }\r\n        }\r\n        \r\n        const URL =`http://localhost:5000/notes/${id}`\r\n        const {data} =await axios.delete(URL,config);\r\n\r\n        dispatch({type:DELETE_NOTES_SUCCESS,payload:data})\r\n\r\n    }catch(error){\r\n         dispatch({type:DELETE_NOTES_FAILURE,\r\n          payload:\"The requested note could not be deleted\"});\r\n    }\r\n  }","import React, { useState,useEffect } from \"react\";\r\nimport MainScreen from \"../../Components/MainScreen\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Loading from \"../../Components/spinner\";\r\nimport Error from \"../../Components/Error\";\r\nimport \"../login/login.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {userLoginAction} from \"../../actions/user_action\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch =useDispatch();\r\n  const userLogin = useSelector((state)=>state.userLogin);\r\n  const {loading,error,userInfo}=userLogin;\r\n  const navigate=useNavigate();\r\n\r\n  useEffect(()=>{\r\n    if(userInfo){\r\n      navigate('/notes')\r\n    }\r\n  },[navigate,userInfo])\r\n\r\n  const HandleClick = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(userLoginAction(email,password))\r\n\r\n  }\r\n\r\n  return (\r\n    <MainScreen title=\"LOGIN\">\r\n      {error && <Error>{error}</Error>}\r\n      {loading ? <Loading /> :\r\n      <div className=\"loginContainer\">\r\n      <Form onSubmit={HandleClick}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"warning\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      </div>}\r\n    </MainScreen>\r\n   \r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MainScreen from \"../../Components/MainScreen\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"../register/register.css\";\r\nimport Loading from \"../../Components/spinner\";\r\nimport ErrorMessage from \"../../Components/Error\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userRegisterAction } from \"../../actions/user_action\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Register() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n  const [Telephone, setPhone] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  \r\n  \r\n  \r\n  const dispatch = useDispatch();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n  const navigate = useNavigate();\r\n\r\n  \r\n\r\n  const Handleclick =  (event) => {\r\n    event.preventDefault();\r\n    if (Telephone.length === 10) {\r\n      if (password !== confirmPassword) {\r\n        setMessage(\"Passwords do not match\");\r\n      } else {\r\n        dispatch(userRegisterAction(name, email, password, Telephone));\r\n      }\r\n    } else {\r\n      setMessage(\"Invalid Phone number\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(\"/notes\");\r\n    }\r\n  }, [userInfo, navigate]);\r\n\r\n  return (\r\n    <MainScreen title=\"SIGN UP\">\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n      {message && <ErrorMessage>{message}</ErrorMessage>}\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Form onSubmit={Handleclick}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter user name\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => {\r\n                setconfirmPassword(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Telephone</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter phone no\"\r\n              value={Telephone}\r\n              onChange={(e) => {\r\n                setPhone(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\" className=\"my-2 button\">\r\n            SIGN UP/REGISTER\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState,useEffect} from \"react\";\r\nimport MainScreen from \"../../Components/MainScreen\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loading from \"../../Components/spinner\";\r\nimport Error from \"../../Components/Error\";\r\nimport {postNoteAction} from \"../../actions/notes_actions\";\r\n\r\nfunction Post() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const postNotes = useSelector((state) => state.postNotes);\r\n  const { loading, error,note } = postNotes;\r\n  const navigate = useNavigate();\r\n  \r\n \r\n  const Handleclick = (event) => {\r\n    event.preventDefault();\r\n    dispatch(postNoteAction(title,content));\r\n    navigate(\"/notes\");\r\n    if (!title || !content) {\r\n       alert(\"Please fill the empty fields\");\r\n       navigate(\"/post\");\r\n    \r\n    }\r\n   \r\n   \r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <MainScreen title=\"Add your favourite Note\">\r\n      {error && <Error variant=\"danger\">{error}</Error>}\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Form onSubmit={Handleclick}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Title :</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Content :</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={4}\r\n              placeholder=\"Enter Content\"\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"dark\" type=\"submit\">\r\n            Add\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MainScreen from \"../../Components/MainScreen\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Loading from \"../../Components/spinner\";\r\nimport ErrorMessage from \"../../Components/Error\";\r\nimport axios from \"axios\";\r\nimport { updateNoteAction } from \"../../actions/notes_actions\";\r\n\r\nfunction Edit() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const id = useParams().id;\r\n  const dispatch = useDispatch();\r\n  const updateNotes = useSelector((state) => state.updateNotes);\r\n  const { loading, error } = updateNotes;\r\n\r\n  useEffect(() => {\r\n    const fetchNotebyId = async () => {\r\n      const URL = `http://localhost:5000/notes/${id}`;\r\n      const { data } = await axios.get(URL);\r\n      setTitle(data.title);\r\n      setContent(data.content);\r\n    };\r\n    fetchNotebyId();\r\n  }, [id]);\r\n\r\n  const Handleclick = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateNoteAction(id, title, content));\r\n    navigate(\"/notes\");\r\n    if (!title || !content) {\r\n      alert(\"Please fill all the required fields\");\r\n      navigate(\"/notes/:id\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Update Your's Title and Content...\">\r\n    {error && <ErrorMessage>{error}</ErrorMessage>}\r\n     {loading ? <Loading/>:\r\n      <Form onSubmit={Handleclick}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Title :</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Content :</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={4}\r\n            placeholder=\"Enter Content\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"info\" type=\"submit\">\r\n          UPDATE\r\n        </Button>\r\n      </Form>}\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n","import React,{useState,useEffect} from \"react\";\r\nimport MainScreen from \"../../Components/MainScreen\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { userProfileUpdateAction } from \"../../actions/user_action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loading from \"../../Components/spinner\";\r\nimport ErrorMessage from \"../../Components/Error\";\r\nimport {useNavigate} from \"react-router-dom\"\r\n\r\nfunction Profile() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n  const [Telephone, setPhone] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userProfile = useSelector((state)=>state.userProfile);\r\n  const{loading,error,success}=userProfile;\r\n\r\n  useEffect(()=>{\r\n      if(!userInfo){\r\n        navigate('/');\r\n      }\r\n      setName(userInfo.name);\r\n      setEmail(userInfo.email);\r\n      setPhone(userInfo.Telephone);\r\n      \r\n\r\n  },[userInfo,navigate])\r\n\r\n\r\n\r\n  const Handleclick =  (event) => {\r\n    event.preventDefault();\r\n    if (Telephone.length === 10) {\r\n      if (password !== confirmPassword) {\r\n        setMessage(\"Passwords do not match\");\r\n      } else {\r\n        dispatch(userProfileUpdateAction({name, email, password, Telephone}));\r\n      }\r\n    } else {\r\n      setMessage(\"Invalid Phone number\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Update your profile\">\r\n       {error && <ErrorMessage>{error}</ErrorMessage>}\r\n      {message && <ErrorMessage>{message}</ErrorMessage>}\r\n      {success && (\r\n                <ErrorMessage variant=\"success\">\r\n                  Updated Successfully\r\n                </ErrorMessage>\r\n              )}\r\n    {loading ? <Loading/>:\r\n      <Form onSubmit={Handleclick}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter user name\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => {\r\n              setconfirmPassword(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Telephone</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter phone no\"\r\n            value={Telephone}\r\n            onChange={(e) => {\r\n              setPhone(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\" className=\"my-2 button\">\r\n          Once Edit is done, click to update your user profile\r\n        </Button>\r\n      </Form>}\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport Homepage from \"./Screen/landingpage/landingpage\";\nimport Notes from \"./Screen/Notes/Notes\";\nimport Login from \"./Screen/login/login\";\nimport Register from \"./Screen/register/register\";\nimport Post from \"./Screen/postNote/postNote\";\nimport Edit from \"./Screen/updateNote/updateNote\";\nimport Profile from \"./Screen/profile/profile\";\nimport{BrowserRouter,Routes,Route} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n       <Header/>\n       <main>\n        <Routes>\n        <Route path=\"/\" element= {<Homepage/>} exact/>\n        <Route path=\"/notes\" element= {<Notes/>} exact/>\n        <Route path=\"/login\" element= {<Login/>} exact/>\n        <Route path=\"/register\" element= {<Register/>} exact/>\n        <Route path=\"/post\" element= {<Post/>} exact/>\n        <Route path=\"/notes/:id\" element= {<Edit/>} exact/>\n        <Route path=\"/profile\" element= {<Profile/>} exact/>\n        </Routes>\n       </main>\n       <Footer/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { legacy_createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { userLoginReducer, userRegisterReducer,userProfileUpdateReducer } from \"../reducers/user_reducer\";\r\nimport {getNotesReducer,postNoteReducer,updateNoteReducer,deleteNoteReducer} from \"../reducers/notes_reducer\";\r\n\r\n\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n  userLogin:userLoginReducer,\r\n  userRegister:userRegisterReducer,\r\n  getNotes:getNotesReducer,\r\n  postNotes:postNoteReducer,\r\n  updateNotes:updateNoteReducer,\r\n  deleteNotes:deleteNoteReducer,\r\n  userProfile :userProfileUpdateReducer\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n  const initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n  };\r\n\r\n  const middleware = [thunk];\r\n\r\nconst store = legacy_createStore(\r\n  reducers,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_LOGIN_REQ,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAILURE,\r\n  USER_LOG_OUT,\r\n  USER_REGISTER_REQ,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAILURE,\r\n  USER_UPDATE_REQ,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAILURE,\r\n} from \"../constants/user_constant\";\r\n\r\n//creating action for login and logout\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQ:\r\n      return { loading: true };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_LOGIN_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOG_OUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//creating Register Action\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQ:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true  };\r\n    case USER_REGISTER_FAILURE:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//user profile update reducer\r\nexport const userProfileUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQ:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, userInfo: action.payload,success:true };\r\n\r\n    case USER_UPDATE_FAILURE:\r\n      return { loading: false, error: action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_NOTES_REQ,\r\n  GET_NOTES_SUCCESS,\r\n  GET_NOTES_FAILURE,\r\n  CREATE_NOTE_REQ,\r\n  CREATE_NOTE_SUCCESS,\r\n  CREATE_NOTE_FAILURE,\r\n  UPDATE_NOTE_REQ,\r\n  UPDATE_NOTE_SUCCESS,\r\n  UPDATE_NOTE_FAILURE,\r\n  DELETE_NOTES_REQ,\r\n  DELETE_NOTES_SUCCESS,\r\n  DELETE_NOTES_FAILURE,\r\n} from \"../constants/notes_constants\";\r\n\r\n//Read operation\r\nexport const getNotesReducer = (state = { notes: [] }, action) => {\r\n  switch (action.type) {\r\n    case GET_NOTES_REQ:\r\n      return { loading: true };\r\n    case GET_NOTES_SUCCESS:\r\n      return { loading: false, notes: action.payload };\r\n    case GET_NOTES_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//create operation\r\nexport const postNoteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_NOTE_REQ:\r\n      return { loading: true };\r\n    case CREATE_NOTE_SUCCESS:\r\n      return { loading: false, success: true, note: action.payload };\r\n    case CREATE_NOTE_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//update operation\r\nexport const updateNoteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_NOTE_REQ:\r\n      return { loading: true };\r\n\r\n    case UPDATE_NOTE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case UPDATE_NOTE_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//Delete operation reducer\r\nexport const deleteNoteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case DELETE_NOTES_REQ:\r\n      return { loading: true };\r\n\r\n    case DELETE_NOTES_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case DELETE_NOTES_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\n\n ReactDOM.render(\n     <Provider store ={store}>\n    <App />\n    </Provider>\n \n ,document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}